"use strict";(self.webpackChunkcarol_soares_blog=self.webpackChunkcarol_soares_blog||[]).push([[4567],{824:e=>{e.exports=JSON.parse('{"permalink":"/carol-soares-blog/blog/python-tips-fun-facts","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-06-24-python-tips.md","source":"@site/blog/2025-06-24-python-tips.md","title":"Fun Python Tips & Curious Facts Every Developer Should Know","description":"Some Python tips and fun facts to make your coding journey more interesting!","date":"2025-06-24T00:00:00.000Z","tags":[{"inline":true,"label":"python","permalink":"/carol-soares-blog/blog/tags/python"},{"inline":true,"label":"software development","permalink":"/carol-soares-blog/blog/tags/software-development"},{"inline":true,"label":"career","permalink":"/carol-soares-blog/blog/tags/career"},{"inline":true,"label":"tips","permalink":"/carol-soares-blog/blog/tags/tips"}],"readingTime":4.255,"hasTruncateMarker":false,"authors":[{"name":"Carol Soares","title":"Backend Enginner @ Thoughtworks","url":"https://github.com/carolinesoarws","page":{"permalink":"/carol-soares-blog/blog/authors/carolsoares"},"socials":{"linkedin":"https://www.linkedin.com/in/caroline-soares-0ba238107/","github":"https://github.com/carolinesoarws"},"imageURL":"https://avatars.githubusercontent.com/u/83501330?v=4","key":"carolsoares"}],"frontMatter":{"slug":"python-tips-fun-facts","title":"Fun Python Tips & Curious Facts Every Developer Should Know","authors":"carolsoares","tags":["python","software development","career","tips"],"description":"Some Python tips and fun facts to make your coding journey more interesting!"},"unlisted":false,"prevItem":{"title":"Dealing with mental health as a Developer","permalink":"/carol-soares-blog/blog/mental-health-being-a-developer"},"nextItem":{"title":"What is a Large Language Model (LLM)?","permalink":"/carol-soares-blog/blog/large-language-models-llm"}}')},4265:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var o=s(824),t=s(4848),r=s(8453);const i={slug:"python-tips-fun-facts",title:"Fun Python Tips & Curious Facts Every Developer Should Know",authors:"carolsoares",tags:["python","software development","career","tips"],description:"Some Python tips and fun facts to make your coding journey more interesting!"},l=void 0,a={authorsImageUrls:[void 0]},c=[{value:"The Zen of Python",id:"the-zen-of-python",level:2},{value:"Naming Your Python Files: camelCase or snake_case?",id:"naming-your-python-files-camelcase-or-snake_case",level:2},{value:"Why is it Called Python?",id:"why-is-it-called-python",level:2},{value:"Bonus Tips to Power Up Your Python",id:"bonus-tips-to-power-up-your-python",level:2},{value:"<strong>F-strings make formatting a breeze:</strong>",id:"f-strings-make-formatting-a-breeze",level:4},{value:"<strong>List comprehensions save time:</strong>",id:"list-comprehensions-save-time",level:4},{value:"<strong>Want to see all built-in functions?</strong>",id:"want-to-see-all-built-in-functions",level:4},{value:"<strong>Use virtual environments:</strong>",id:"use-virtual-environments",level:4},{value:"<strong>Multiple variable assignment:</strong>",id:"multiple-variable-assignment",level:4},{value:"<strong>Swap variables in one line:</strong>",id:"swap-variables-in-one-line",level:4},{value:"<strong>The \u201celse\u201d in loops:</strong>",id:"the-else-in-loops",level:4},{value:"<strong>Underscore (<code>_</code>) for ignoring values:</strong>",id:"underscore-_-for-ignoring-values",level:4},{value:"<strong>Get the index and value in a loop:</strong>",id:"get-the-index-and-value-in-a-loop",level:4},{value:"<strong>Use <code>join()</code> to concatenate strings in a list:</strong>",id:"use-join-to-concatenate-strings-in-a-list",level:4},{value:"<strong>Quickly reverse a list:</strong>",id:"quickly-reverse-a-list",level:4},{value:"Docs, PEPs &amp; the Awesome Python Community",id:"docs-peps--the-awesome-python-community",level:2},{value:"\ud83e\udde0 One Last Curiosity\u2026",id:"-one-last-curiosity",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Hey everyone! \ud83d\udc0d\u2728 ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.p,{children:"Python isn\u2019t just a programming language \u2014 it\u2019s a whole vibe. Whether you\u2019re just starting out, or already writing scripts before your morning tea (yep, I know \u2014 sorry, developer community, I don\u2019t drink coffee!), there\u2019s always something new (or quirky!) to learn. So here are some fun Python facts and tips to brighten your dev day:"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"the-zen-of-python",children:"The Zen of Python"}),"\n",(0,t.jsx)(n.p,{children:"Did you know Python comes with its own \u201cphilosophy poem\u201d?\nJust open your terminal and type:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import this\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You\u2019ll get the ",(0,t.jsx)(n.strong,{children:"Zen of Python"}),"\u201419 guiding aphorisms by Tim Peters, like:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u201cBeautiful is better than ugly.\u201d"}),"\n",(0,t.jsx)(n.li,{children:"\u201cSimple is better than complex.\u201d"}),"\n",(0,t.jsx)(n.li,{children:"\u201cReadability counts.\u201d"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Trust me, if you haven\u2019t seen it, it\u2019s worth a look. It\u2019s like a fortune cookie for developers. \ud83d\udc0d"}),"\n",(0,t.jsx)(n.h2,{id:"naming-your-python-files-camelcase-or-snake_case",children:"Naming Your Python Files: camelCase or snake_case?"}),"\n",(0,t.jsxs)(n.p,{children:["Spoiler alert: In Python, the ",(0,t.jsx)(n.strong,{children:"PEP8 style guide"})," recommends using ",(0,t.jsx)(n.code,{children:"snake_case"})," (lowercase with underscores) for filenames and function names\u2014like ",(0,t.jsx)(n.code,{children:"my_awesome_script.py"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["But\u2026 what happens if you use camelCase, like ",(0,t.jsx)(n.code,{children:"myAwesomeScript.py"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["Technically, your script will still work, and you can even import it using the same name. But if you ever share your code, or move between Windows and Linux, you might run into confusing import errors (since Linux treats uppercase and lowercase as different files). Plus, Python tools and most developers expect ",(0,t.jsx)(n.code,{children:"snake_case"})," for file and module names\u2014so using camelCase can lead to warnings, headaches, and harder-to-maintain code."]}),"\n",(0,t.jsxs)(n.p,{children:["Save yourself (and your team) some future trouble\u2014stick to ",(0,t.jsx)(n.code,{children:"snake_case"})," for filenames and module names. Your future self will thank you! \ud83d\ude09"]}),"\n",(0,t.jsx)(n.h2,{id:"why-is-it-called-python",children:"Why is it Called Python?"}),"\n",(0,t.jsxs)(n.p,{children:["No, it\u2019s not named after the snake!\nGuido van Rossum, Python\u2019s creator, named it after the British comedy group \u201cMonty Python\u2019s Flying Circus.\u201d\nSo, it\u2019s not uncommon to see official docs and tutorials full of jokes and silly references.\nNext time you see a variable called ",(0,t.jsx)(n.code,{children:"spam"})," or ",(0,t.jsx)(n.code,{children:"eggs"}),"\u2014now you know why!"]}),"\n",(0,t.jsx)(n.h2,{id:"bonus-tips-to-power-up-your-python",children:"Bonus Tips to Power Up Your Python"}),"\n",(0,t.jsx)(n.h4,{id:"f-strings-make-formatting-a-breeze",children:(0,t.jsx)(n.strong,{children:"F-strings make formatting a breeze:"})}),"\n",(0,t.jsxs)(n.p,{children:["Instead of ",(0,t.jsx)(n.code,{children:'"Hello, {}".format(name)'})," use ",(0,t.jsx)(n.code,{children:'f"Hello, {name}"'}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"list-comprehensions-save-time",children:(0,t.jsx)(n.strong,{children:"List comprehensions save time:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"[x*x for x in range(10)]"}),"\nOne line, super readable."]}),"\n",(0,t.jsx)(n.h4,{id:"want-to-see-all-built-in-functions",children:(0,t.jsx)(n.strong,{children:"Want to see all built-in functions?"})}),"\n",(0,t.jsxs)(n.p,{children:["Try ",(0,t.jsx)(n.code,{children:"dir(__builtins__)"})," in the REPL."]}),"\n",(0,t.jsx)(n.h4,{id:"use-virtual-environments",children:(0,t.jsx)(n.strong,{children:"Use virtual environments:"})}),"\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"python -m venv venv"})," to keep your project dependencies isolated (and your global Python happy)."]}),"\n",(0,t.jsx)(n.h4,{id:"multiple-variable-assignment",children:(0,t.jsx)(n.strong,{children:"Multiple variable assignment:"})}),"\n",(0,t.jsxs)(n.p,{children:["You can assign several variables at once:\n",(0,t.jsx)(n.code,{children:"a, b, c = 1, 2, 3"})," ",(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),"\nClean and \u201cpythonic\u201d!\u2728"]}),"\n",(0,t.jsx)(n.h4,{id:"swap-variables-in-one-line",children:(0,t.jsx)(n.strong,{children:"Swap variables in one line:"})}),"\n",(0,t.jsxs)(n.p,{children:["No need for a temporary variable:\n",(0,t.jsx)(n.code,{children:"a, b = b, a"})]}),"\n",(0,t.jsx)(n.h4,{id:"the-else-in-loops",children:(0,t.jsx)(n.strong,{children:"The \u201celse\u201d in loops:"})}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.code,{children:"else"})," with a ",(0,t.jsx)(n.code,{children:"for"})," or ",(0,t.jsx)(n.code,{children:"while"})," loop! The ",(0,t.jsx)(n.code,{children:"else"})," block runs only if the loop wasn\u2019t interrupted by a ",(0,t.jsx)(n.code,{children:"break"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'for n in range(5):\n    if n == 3:\n        print("Found 3!")\n        break\nelse:\n    print("3 not found!")\n'})}),"\n",(0,t.jsx)(n.h4,{id:"underscore-_-for-ignoring-values",children:(0,t.jsxs)(n.strong,{children:["Underscore (",(0,t.jsx)(n.code,{children:"_"}),") for ignoring values:"]})}),"\n",(0,t.jsxs)(n.p,{children:["Don\u2019t care about a value in an assignment or loop? Use ",(0,t.jsx)(n.code,{children:"_"})," as a placeholder: ",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.code,{children:"for _, value in enumerate(my_list):"})]}),"\n",(0,t.jsx)(n.h4,{id:"get-the-index-and-value-in-a-loop",children:(0,t.jsx)(n.strong,{children:"Get the index and value in a loop:"})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"enumerate()"})," for easy indexing:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"for index, value in enumerate(['a', 'b', 'c']):\n    print(index, value)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"use-join-to-concatenate-strings-in-a-list",children:(0,t.jsxs)(n.strong,{children:["Use ",(0,t.jsx)(n.code,{children:"join()"})," to concatenate strings in a list:"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'words = ["Hello", "world"]\nsentence = " ".join(words)  # Output: "Hello world"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"quickly-reverse-a-list",children:(0,t.jsx)(n.strong,{children:"Quickly reverse a list:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"my_list[::-1]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"docs-peps--the-awesome-python-community",children:"Docs, PEPs & the Awesome Python Community"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Official Docs Are Your Best Friend:"}),"\nThe ",(0,t.jsx)(n.a,{href:"https://docs.python.org/3/",children:"official Python documentation"})," is clear, detailed, and full of examples. Whenever you\u2019re unsure about a function, module, or syntax, check the docs first\u2014it will save you hours of guessing and Stack Overflow deep dives."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PEPs: Python Enhancement Proposals:"}),"\nEver wondered how Python evolves? Through PEPs! These documents describe new features, improvements, and the philosophy of Python. The most famous one is ",(0,t.jsx)(n.a,{href:"https://peps.python.org/pep-0008/",children:"PEP 8"}),", which defines Python\u2019s style guide.\nSome other fun PEPs to check out:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://peps.python.org/pep-0020/",children:"PEP 20 \u2013 The Zen of Python"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://peps.python.org/pep-0257/",children:"PEP 257 \u2013 Docstring Conventions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://peps.python.org/pep-0484/",children:"PEP 484 \u2013 Type Hints"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Write Great Docstrings:"}),"\nGood code tells a story\u2014so help your future self (and your teammates) by writing clear docstrings for your functions, classes, and modules!\nUse triple quotes and follow ",(0,t.jsx)(n.a,{href:"https://peps.python.org/pep-0257/",children:"PEP 257"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def add(a, b):\n    """\n    Add two numbers and return the result.\n\n    Args:\n        a (int): First number.\n        b (int): Second number.\n\n    Returns:\n        int: The sum of a and b.\n    """\n    return a + b\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Python Community is Everywhere:"}),"\nDon\u2019t code alone!"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Join ",(0,t.jsx)(n.a,{href:"https://pythondiscord.com/",children:"Python Discord"})]}),"\n",(0,t.jsxs)(n.li,{children:["Follow the ",(0,t.jsx)(n.a,{href:"https://www.reddit.com/r/learnpython/",children:"r/learnpython"})," subreddit"]}),"\n",(0,t.jsx)(n.li,{children:"Attend local meetups or PyCon events"}),"\n",(0,t.jsx)(n.li,{children:"Or ask questions on Stack Overflow\u2014Python\u2019s community is famously friendly and helpful!"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Contribute Back!"}),"\nPython thrives on open source and community contributions. Whether you\u2019re fixing a typo in the docs, adding a tutorial, or helping someone on a forum, you\u2019re already making Python better for everyone."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-one-last-curiosity",children:"\ud83e\udde0 One Last Curiosity\u2026"}),"\n",(0,t.jsx)(n.p,{children:"The Zen of Python ends with:"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u201cAlthough practicality beats purity.\u201d\nSo if you ever feel lost in style rules, remember: It\u2019s better to write code that works (and that you understand), than to get stuck trying to be perfect."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var o=s(6540);const t={},r=o.createContext(t);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);